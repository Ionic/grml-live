# Filename:      /etc/grml/grml-live.conf
# Purpose:       main configuration file for grml-live
# Authors:       grml-team (grml.org), (c) Michael Prokop <mika@grml.org>
# Bug-Reports:   see http://grml.org/bugs/
# License:       This file is licensed under the GPL v2 or any later version.
# Latest change: Sat Oct 06 17:34:28 CEST 2007 [mika]
################################################################################

# Main output directory
# Please notice that you need suid,dev,rw permissions there
OUTPUT="/grml/grml-live"
# You have enough RAM? Use shared memory for fast testing purposes:
# OUTPUT="/dev/shm" # mount -o remount,suid,dev,rw /dev/shm

# Where do want to find the chroot of the buildprocess files?
CHROOT_OUTPUT="$OUTPUT/grml_chroot"
# Where do you want to find the compressed chroot, bootstuff,...?
BUILD_OUTPUT="$OUTPUT/grml_cd"
# Where do you want to find the final ISO?
ISO_OUTPUT="$OUTPUT/grml_isos"

# Which Debian suite to you want to use? Unless it is set it defaults to "etch"
# Supported values are: etch, lenny, sid
# SUITE="sid"

# Which FAI classes do you want to use by default?#

# Notice: GRMLBASE is recommended in any case unless you *really* know what you
# are doing; make sure to also use a GRML_* class (for example GRML_SMALL,
# GRML_MEDIUM or GRML_FULL) to get an according kernel and also select the
# architecture (I386 for x86; AMD64 for x86_64)
CLASSES="GRMLBASE,GRML_MEDIUM,I386"

## Which mirrors do you want to use? Please set GRML_LIVE_SOURCES *and*
## *FAI_DEBOOTSTRAP* accordingly. To use a local directory (like an NFS mount)
## check out MIRROR_DIRECTORY and MIRROR_SOURCES as well.

# Do you want to generate /etc/grml/fai/apt/sources.list on-the-fly via grml-live?
# If so then activate the according mirrors using GRML_LIVE_SOURCES=...
# If you do *not* set GRML_LIVE_SOURCES here then grml-live will just take what
# /etc/grml/fai/apt/sources.list provides by default.
# Use the variable like your /etc/apt/sources.list looks like.
#GRML_LIVE_SOURCES="
#deb http://192.168.1.112/debian     etch         main contrib non-free
#deb http://deb.grml.org/            grml-stable  main
#deb http://deb.grml.org/            grml-testing main
#deb http://ftp.de.debian.org/debian etch         main contrib non-free
#"

# Which Debian suite and which mirror do you want to use for debootstrapping?
# Unless specified the default from /etc/grml/fai/make-fai-nfsroot.conf will be
# taken. If you specify a value then the file /etc/grml/fai/make-fai-nfsroot.conf
# will be updated by grml-live on-the-fly.
# Usage: "<suite> <mirror>"
# FAI_DEBOOTSTRAP="etch http://ftp.de.debian.org/debian"

# Do you want to use a local mirror (like NFS) as well?
# If so specify the directory where debian/ is available:
# MIRROR_DIRECTORY="/mnt/mirror"
# ... and the sources.list entry for the directory:
# MIRROR_SOURCES="deb file:///mnt/mirror/debian sid main contrib non-free"

# Version number of ISO:
VERSION="0.0-1"

# Name of the release:
RELEASENAME="grml-live just rocks!"

# Which "grml flavour name" do you want to use?
# Common usage examples: grml, grml-small, grml64,...
GRML_NAME="grml"

# Specify hostname of the live-system:
HOSTNAME=grml

# Specify user with UID 1000 on live-system:
USERNAME=grml

# Which bootloader do you want to use? Default: isolinux
# Supported values: isolinux, grub
# BOOT_METHOD='isolinux'

# Directory of configuration files for grml-live's FAI:
GRML_FAI_CONFIG=/etc/grml/fai

# Do you want to pass any additional arguments to FAI?
# FAI_ARGS=""

# Where do you want to store grml-live.log?
# LOGDIR="/var/log/fai/dirinstall/$HOSTNAME"

# Which architecture do you want to build?
# It defaults to output of 'dpkg --print-architecture'
# ARCH="i386"

# Do you want to use your own templates? If so set the
# template directory but please make sure it looks
# likes the default directory [/usr/share/grml-live/templates]
# TEMPLATE_DIRECTORY='/usr/share/grml-live/templates'

# Do you want to download pageant, plink, pscp, psftp, putty and puttygen
# using wget to store it inside $BUILD_OUTPUT/windows/?
# Just unset it do skip download via wget or modify the download URL.
WINDOWS_BINARIES="http://the.earth.li/~sgtatham/putty/latest/x86/"

## END OF FILE #################################################################
